<Page
    x:Class="RelativePanelStudy.Views.SplitViewExample"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RelativePanelStudy.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)" xmlns:Windows10FallCreatorsUpdate="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid>

        <SplitView x:ConnectionId='2' x:Name="splitView"
                   IsPaneOpen="False"
                   DisplayMode="CompactOverlay"
                   CompactPaneLength="80"
                   OpenPaneLength="500">
            <SplitView.Pane>
                <Grid Background="Beige">
                    <Button x:ConnectionId='3' x:Name="MenuBtn" FontFamily="Segoe MDL2 Assets" Content="&#xE700;" Background="Transparent" VerticalAlignment="Top"
                            Margin="21,37,0,0" Width="42" Height="58" Foreground="Black" FontSize="30"                      />
                    <TextBlock Text="Pane"
                   FontSize="24"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"/>
                    <Button x:ConnectionId='4' x:Name="FlipViewBtn" 
                    MaxWidth="200" 
                    MaxHeight="100" 
                    Content="FlipView"
                    FontSize="36" 
                    BorderBrush="Black" 
                    BorderThickness="10"  
                    Windows10version1809:CornerRadius="20"                           HorizontalAlignment="Center" Margin="0,123,0,0" VerticalAlignment="Top"
                    />
                    <Button x:ConnectionId='5' x:Name="BackToRelativeBtn" 
                    MaxWidth="450" 
                    MaxHeight="100" 
                   
                    Content="RelativePanel"
                    FontSize="36" 
                    BorderBrush="Black" 
                    BorderThickness="10"   
                    Windows10version1809:CornerRadius="20"                                 Margin="0,367,0,0" VerticalAlignment="Top" HorizontalAlignment="Center"
                    />

                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                
                <Grid Background="Aqua" Width="auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                       

                    </Grid.ColumnDefinitions>
                    <ScrollViewer Grid.Column="0" Background="Aqua" HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Visible" ZoomMode="Enabled" Width="auto">

                        <RelativePanel HorizontalAlignment="Stretch" Width="auto">
                            
                            <TextBlock x:ConnectionId='6' x:Name="text"         
                                       
                               RelativePanel.AlignTopWithPanel="True"
                               RelativePanel.AlignHorizontalCenterWithPanel="True"
                               Text="A ScrollViewer enables content to be displayed in a smaller area than its actual size. When the content of the ScrollViewer is not entirely visible, the ScrollViewer displays scrollbars that the user can use to move the content areas that is visible. The area that includes all of the content of the ScrollViewer is the extent. The visible area of the content is the viewport.

It's typical for a ScrollViewer control to exist as a composite part of other controls. A ScrollViewer part along with the ScrollContentPresenter class for support will display a viewport along with scrollbars only when the host control's layout space is being constrained smaller than the expanded content size. This is often the case for lists, so ListView and GridView templates always include a ScrollViewer. TextBox and RichEditBox also include a ScrollViewer in their templates.

When a ScrollViewer part in a control exists, the host control often has built-in event handling for certain input events and manipulations that enable the content to scroll. For example, a GridView interprets a swipe gesture and this causes the content to scroll horizontally. The input events and raw manipulations that the host control receives are considered handled by the control, and lower-level events such as PointerPressed won't be raised and won't bubble to any parent containers either. You can change some of the built-in control handling by overriding a control class and the OnEvent virtual methods for events, or by retemplating the control. But in either case it's not trivial to reproduce the original default behavior, which is typically there so that the control reacts in expected ways to events and to a user's input actions and gestures. So you should consider whether you really need that input event to fire. You might want to investigate whether there are other input events or gestures that are not being control-handled, and use those in your app or control interaction design.

To make it possible for controls that include a ScrollViewer to influence some of the behavior and properties that are from within the ScrollViewer part, ScrollViewer defines a number of XAML attached properties that can be set in styles and used in template bindings.

If you need to handle pointer events for a UIElement in a scrollable view (such as a ScrollViewer), you must explicitly disable support for manipulation events on the element in the view by calling UIElement.CancelDirectmanipulation(). To re-enable manipulation events in the view, call UIElement.TryStartDirectManipulation()."
                               Foreground="Black"
                               FontSize="40" 
                               MaxWidth="1176"
                               Height="auto"
                               Windows10FallCreatorsUpdate:HorizontalTextAlignment="Center"
                               TextWrapping="Wrap"
                                       
                               TextAlignment="Justify" Width="auto"
                               
                                   />
                            <Image
                        RelativePanel.Below="text"
                        RelativePanel.AlignHorizontalCenterWithPanel="True"
                        Source="/Assets/Images/pic1.png"
                        MaxWidth="1000"
                        MaxHeight="800"
                    />
                        </RelativePanel>


                    </ScrollViewer>
                </Grid>
            </SplitView.Content>
        </SplitView>


    </Grid>
</Page>

